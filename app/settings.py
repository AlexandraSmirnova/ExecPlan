# coding=utf-8
"""
Django settings for exec_plan project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

import sys

from app.config import SafeConfigParser

BASE_DIR = os.path.dirname(os.path.dirname(__file__))
config = SafeConfigParser()

PROJECT_DIR = os.path.dirname(BASE_DIR)
PROJECT_NAME = 'exec_plan'
PRODUCTION_DIR = '/opt/{0}'.format(PROJECT_NAME)

production_config = os.path.join('/etc', PROJECT_NAME, '{0}.conf'.format(PROJECT_NAME))
local_config = os.path.join(BASE_DIR, 'build', 'local.conf')
development_config = local_config if os.path.exists(local_config) else os.path.join(BASE_DIR, 'build', 'default.conf')

config_path = production_config if os.path.exists(production_config) else development_config
config.read(config_path)

SECRET_KEY = config.get('secret', 'SECRET_KEY', '!SECRET_KEY!')

DEBUG = config.getboolean('common', 'DEBUG', False)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export'
]
PROJECT_APPS = [
    'core',
    'scheduling',
]
INSTALLED_APPS += PROJECT_APPS

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database

DATABASES = {
    'default': {
        'ENGINE': config.get('database', 'ENGINE', 'django.db.backends.mysql'),
        'NAME': config.get('database', 'NAME'),
        'USER': config.get('database', 'USER'),
        'PASSWORD': config.get('database', 'PASSWORD'),
        'HOST': config.get('database', 'HOST', '127.0.0.1'),
        'PORT': config.getint('database', 'PORT', 3306),
        'OPTIONS': {'charset': 'utf8'},
        'TEST': {
            'NAME': 'draft_test_db',
            'CHARSET': 'utf8',
        },
    }
}

# Auth and socials

AUTH_USER_MODEL = 'core.User'

LOGIN_URL = '/'
LOGIN_ERROR_URL = '/'
LOGIN_REDIRECT_URL = '/profile/'

AUTH_MODEL_BACKEND = 'django.contrib.auth.backends.ModelBackend'

AUTHENTICATION_BACKENDS = [
    AUTH_MODEL_BACKEND
]


# Internationalization

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

SERVER_TIME_OFFSET = config.getint('common', 'SERVER_TIME_OFFSET', 0)

USE_I18N = True

USE_L10N = False

USE_TZ = True

DATETIME_FORMAT = 'd.m.y. H:i'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)


# Static files

if os.path.exists(PRODUCTION_DIR):
    MEDIA_ROOT = config.get('common', 'MEDIA_ROOT', '/opt/draft/media/')
else:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

MEDIA_URL = '/media/'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')

if 'collectstatic' in sys.argv:
    STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

STATIC_URL = '/static/'

